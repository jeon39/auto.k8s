---
- name: Setup Ansible to each node
  hosts: all
  connection: local
  become: no
  become_user: vagrant
  serial: 1
  gather_facts: no
  vars:
    ansible_password: vagrant
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - debug: var=ansible_host

    #- name: key scan with host name
    #  command: /usr/bin/ssh-keyscan -t ecdsa {{ ansible_host }}
    #  register: key_host

    #- name: put key_host on known_hosts
    #  lineinfile:
    #    path: /home/vagrant/.ssh/known_hosts
    #    line: "{{ item }}"
    #    #create: yes
    #  with_items:
    #    - "{{ key_host.stdout_lines }}"

    #- name: key scan with host ip
    #  command: /usr/bin/ssh-keyscan -t ecdsa {{ ip }}
    #  register: key_ip

    #- name: put key_ip on known_hosts
    #  lineinfile:
    #    path: /home/vagrant/.ssh/known_hosts
    #    line: "{{ item }}"
    #    create: yes
    #  with_items:
    #    - "{{ key_ip.stdout_lines }}"

    #- name: update /etc/ssh/sshd_config
    #  lineinfile:
    #    path: "/etc/ssh/sshd_config"
    #    regexp: '{{ item.from }}'
    #    line: '{{ item.to }}'
    #  with_items:
    #    - { from: 'PasswordAuthentication no', to: 'PasswordAuthentication yes' }
    #    - { from: '#PubkeyAuthentication yes', to: 'PubkeyAuthentication yes' }
    #   - { from: '#PermitRootLogin prohibit-password', to: 'PermitRootLogin yes' }

    - name: restart ssh service
      service:
        name: ssh
        state: restarted
      run_once: true

    - name: copy public key to each node
      become: true
      command: sshpass -p {{ ansible_password }} ssh-copy-id -i ~/.ssh/id_rsa.pub vagrant@{{ item }} -f -o StrictHostKeyChecking=no
      with_items:
        - "{{ ansible_host }}"
      run_once: true
    
